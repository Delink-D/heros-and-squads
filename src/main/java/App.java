/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import java.util.*;
import spark.ModelAndView;
import spark.template.velocity.VelocityTemplateEngine;
import static spark.Spark.*;

public class App {
	public static void main(String[] args) {
		staticFileLocation("/public");
		String layout = "/templates/layout.vtl";

		get("/", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();

			model.put("view", "templates/index.vtl");

			return new ModelAndView(model, layout);
		}, new VelocityTemplateEngine());

		get("/groups", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();

			model.put("squads", Squad.getSquads());
			model.put("view", "templates/groups.vtl");

			return new ModelAndView(model, layout);
		},new VelocityTemplateEngine());

		// add new squad
		post("/groups", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();

			String gName 		= request.queryParams("name");
			int gSize 			= Integer.parseInt(request.queryParams("size"));
			String gObjective 	= request.queryParams("objective");

			Squad newSquad = new Squad(gName, gSize, gObjective);

			model.put("view", "templates/groups.vtl");

			return new ModelAndView(model, layout);
		},new VelocityTemplateEngine());

		// add squad form
		get("/groups/add-group", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();

			model.put("view", "templates/groupform.vtl");
			
			return new ModelAndView(model, layout);
		},new VelocityTemplateEngine());

		// one category choosen
		get("/groups/:id", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();

            Squad thisSquad = Squad.findSquad(Integer.parseInt(request.params(":id")));
            
            model.put("squad", thisSquad);
            model.put("view", "templates/group.vtl");

            return new ModelAndView(model, layout);
        },new VelocityTemplateEngine());

		// one category choosen
		get("/squad/:id/heros/add-hero", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();

            Squad thisSquad = Squad.findSquad(Integer.parseInt(request.params(":id")));

            model.put("squad", thisSquad);
            model.put("view", "templates/herosform.vtl");

            return new ModelAndView(model, layout);
        },new VelocityTemplateEngine());

		// list all heros
		get("/heros", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();

			model.put("heros", Hero.getHeros());
			model.put("view", "templates/heros.vtl");
			
			return new ModelAndView(model, layout);
		},new VelocityTemplateEngine());

		// Add a hero
		// get("/heros/add-hero", (request, response) -> {
		// 	Map<String, Object> model = new HashMap<String, Object>();

		// 	model.put("view", "templates/herosform.vtl");
			
		// 	return new ModelAndView(model, layout);
		// },new VelocityTemplateEngine());

		post("/heros", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();

			String hName 		= request.queryParams("name");
			int hage 			= Integer.parseInt(request.queryParams("age"));
			Squad hsquad 		= Squad.findSquad(Integer.parseInt(request.queryParams("squadid")));

			Hero newHero = new Hero(hName, hage);
			hsquad.addHero(newHero);
			
			model.put("squad", hsquad);
			model.put("view", "templates/heros.vtl");
			
			return new ModelAndView(model, layout);
		},new VelocityTemplateEngine());

		get("/heros/:id", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();

			Hero thisHero = Hero.findHero(Integer.parseInt(request.params(":id")));
			model.put("hero", thisHero);
			model.put("view", "templates/hero.vtl");
			
			return new ModelAndView(model, layout);
		},new VelocityTemplateEngine());
	}
}
